
.itemButton {
  background-color: white;
  border-radius: 8px;
  color: black;
  border: 2px solid rgb(3, 99, 32);
  font-size: small;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  opacity: 0.8;
  max-width: 80%;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 1px 3px 0 rgba(0,0,0,0.19);
}

.itemButton:hover {
  background-color: rgb(3, 99, 32);
  opacity: 1.0;
  color: white;
}

.itemButton:active {
  box-shadow: 0 2px rgba(0,0,0,0.2);
  transform: translateY(2px);
}

.checkBox {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.checkBox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkMark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}


/* On mouse-over, add a grey background color */
.checkBox:hover input ~ .checkMark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkBox input:checked ~ .checkMark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkMark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkBox input:checked ~ .checkMark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkBox .checkMark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* Responsive lists thanks to
   https://www.fourkitchens.com/blog/article/responsive-multi-column-lists-flexbox/
*/
.listItems {
	display: flex;
	flex-wrap: wrap;
	margin-left: -10px;
	margin-top: -10px;
}

.listItem {
	flex: 1 0 200px;
  box-sizing: border-box;
  background: #e0ddd5;
  color: #171e42;
  padding: 10px;
	margin-left: 10px;
	margin-top: 10px;
}

@media (min-width: 410px) {
  .items .item {
    max-width: calc(50% - 10px);
  }
}
@media (min-width: 620px) {
  .items .item {
    max-width: calc(33.33333% - 10px);
  }
}
@media (min-width: 830px) {
  .items .item {
    max-width: calc(25% - 10px);
  }
}
@media (min-width: 1040px) {
  .items .item {
    max-width: calc(20% - 10px);
  }
}
@media (min-width: 1250px) {
  .items .item {
    max-width: calc(16.66667% - 10px);
  }
}
@media (min-width: 1460px) {
  .items .item {
    max-width: calc(14.28571% - 10px);
  }
}
@media (min-width: 1670px) {
  .items .item {
    min-width: calc(12.5% - 10px);
  }
}

/* react-accessible-accordion */
.accordion {
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 2px;
}

.accordionItem + .accordionItem {
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.accordionButton {
  background-color: #f4f4f4;
  color: #444;
  cursor: pointer;
  padding: 18px;
  width: 100%;
  text-align: left;
  border: none;
}

.accordionButton:hover {
  background-color: #ddd;
}

.accordionButton:before {
  display: inline-block;
  content: '';
  height: 10px;
  width: 10px;
  margin-right: 12px;
  border-bottom: 2px solid currentColor;
  border-right: 2px solid currentColor;
  transform: rotate(-45deg);
}

.accordionButton[aria-expanded='true']::before,
.accordionButton[aria-selected='true']::before {
  transform: rotate(45deg);
}

.accordionPanel {
  padding: 20px;
  animation: fadein 0.35s ease-in;
}

/* -------------------------------------------------- */
/* ---------------- Animation part ------------------ */
/* -------------------------------------------------- */

@keyframes fadein {
  0% {
      opacity: 0;
  }

  100% {
      opacity: 1;
  }
}
